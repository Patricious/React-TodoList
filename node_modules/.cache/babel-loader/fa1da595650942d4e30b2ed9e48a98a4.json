{"ast":null,"code":"var _jsxFileName = \"/Users/patriciamulaudzi/Documents/todo-list/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todos,\n  completeTodo,\n  removeTodo,\n  updateTodo\n}) => {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: [\" \", todo.text, \" \"]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this), \" \"]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 41\n  }, this));\n};\n\n_s(Todo, \"mB/y++saR7gFUN05hWxwjFwFdCc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/patriciamulaudzi/Documents/todo-list/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA;AAAnC,CAAD,KAAqD;AAAA;;AAC9D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAE,IADA;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAQA,MAAIH,IAAI,CAACE,EAAT,EAAa;AACT,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAKF,IAAnB;AACP,MAAA,QAAQ,EAAKI;AADN;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAED,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAmB;AAC5B,IAAA,SAAS,EAAKD,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAD1B;AAAA,4BAGhC;AAEA,MAAA,OAAO,EACH,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAHtB;AAAA,sBAGsCI,IAAI,CAACG,IAH3C;AAAA,OACYH,IAAI,CAACJ,EADjB;AAAA;AAAA;AAAA;AAAA,YAHgC,oBAO1B;AACF,MAAA,SAAS,EAAG,OADV;AAAA,8BAEN,QACA,iBADA;AACkB,QAAA,OAAO,EACrB,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CAFpB;AAGA,QAAA,SAAS,EAAG;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFM,eAON,QACA,MADA;AACO,QAAA,OAAO,EACV,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAX;AAAeC,UAAAA,KAAK,EAAEG,IAAI,CAACG;AAA3B,SAAD,CAFjB;AAGA,QAAA,SAAS,EAAG;AAHZ;AAAA;AAAA;AAAA;AAAA,cAPM;AAAA;AAAA;AAAA;AAAA;AAAA,YAP0B;AAAA,KAExBF,KAFwB;AAAA;AAAA;AAAA;AAAA,UAA7B,CAAP;AAuBH,CA3CD;;GAAMZ,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({\n            id: null,\n            value: ''\n        });\n    };\n\n    if (edit.id) {\n        return <TodoForm edit = { edit }\n        onSubmit = { submitUpdate }\n        />;\n    }\n\n    return todos.map((todo, index) => ( <\n        div className = { todo.isComplete ? 'todo-row complete' : 'todo-row' }\n        key = { index } >\n        <\n        div key = { todo.id }\n        onClick = {\n            () => completeTodo(todo.id) } > { todo.text } <\n        /div> <\n        div className = 'icons' >\n        <\n        RiCloseCircleLine onClick = {\n            () => removeTodo(todo.id) }\n        className = 'delete-icon' /\n        >\n        <\n        TiEdit onClick = {\n            () => setEdit({ id: todo.id, value: todo.text }) }\n        className = 'edit-icon' /\n        >\n        <\n        /div> <\n        /div>\n    ));\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}